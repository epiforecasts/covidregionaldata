% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shared-methods.R
\name{check_country_available}
\alias{check_country_available}
\title{Check country and regions are available and set up country class}
\usage{
check_country_available(
  country = character(),
  level = 1,
  totals = FALSE,
  localise = TRUE,
  regions,
  verbose = TRUE,
  steps = FALSE,
  ...
)
}
\arguments{
\item{country}{A character string specifying the country to get data from.
Not case dependent. Name should be the English name. For a list of
options use \code{get_available_datasets}.}

\item{level}{A character string indicating the target administrative level
of the data with the default being "1". Currently supported options are
level 1 ("1) and level 2 ("2"). Use \code{get_available_datasets} for supported
options by dataset.}

\item{totals}{Logical, defaults to FALSE. If TRUE, returns totalled
data per region up to today's date. If FALSE, returns the full dataset
stratified by date and region.}

\item{localise}{Logical, defaults to TRUE. Should region names be localised.}

\item{regions}{A character vector of target regions to be assigned to the
\code{target_regions} field if present.}

\item{verbose}{Logical, defaults to TRUE. Should verbose processing
messages and warnings be returned.}

\item{steps}{Logical, defaults to FALSE. Should all processing and cleaning
steps be kept and output in a list.}

\item{...}{additional arguments to pass to country specific functionality.}
}
\value{
The target countries specific object if available, e.g. \code{\link[=Italy]{Italy()}}
}
\description{
Check data for the requested country and region
is available and return an initialised region class for that country.
}
\examples{
# Check for Italian data
italy <- check_country_available("Italy")

# Check for UK data with a partial name match
uk <- check_country_available("United Kingdom")

# Check for ECDC data
ecdc <- check_country_available("ecdc")
}
